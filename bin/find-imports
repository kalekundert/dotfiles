#!/usr/bin/env python3

import sys, re
from pathlib import Path

imports = set()
import_patterns = [
    r'\s*import (\w+)',
    r'\s*from (\w+)(\..*)? import',
]
stdlib = {
        'abc',
        'antigravity',
        'argparse',
        'ast',
        'asyncio',
        'base64',
        'bdb',
        'bisect',
        'bz2',
        'calendar',
        'cmd',
        'code',
        'codecs',
        'codeop',
        'collections',
        'colorsys',
        'compileall',
        'concurrent',
        'configparser',
        'contextlib',
        'contextvars',
        'copy',
        'copyreg',
        'cProfile',
        'csv',
        'ctypes',
        'curses',
        'dataclasses',
        'datetime',
        'dbm',
        'decimal',
        'difflib',
        'dis',
        'doctest',
        'email',
        'encodings',
        'ensurepip',
        'enum',
        'filecmp',
        'fileinput',
        'fnmatch',
        'fractions',
        'ftplib',
        'functools',
        '__future__',
        'genericpath',
        'getopt',
        'getpass',
        'gettext',
        'glob',
        'graphlib',
        'gzip',
        'hashlib',
        'heapq',
        '__hello__',
        'hmac',
        'html',
        'http',
        'idlelib',
        'imaplib',
        'importlib',
        'inspect',
        'io',
        'ipaddress',
        'itertools',
        'json',
        'keyword',
        'linecache',
        'locale',
        'logging',
        'lzma',
        'mailbox',
        'math',
        'mimetypes',
        'modulefinder',
        'multiprocessing',
        'netrc',
        'ntpath',
        'nturl2path',
        'numbers',
        'opcode',
        'operator',
        'optparse',
        'os',
        'pathlib',
        'pdb',
        'pickle',
        'pickletools',
        'pkgutil',
        'platform',
        'plistlib',
        'poplib',
        'posixpath',
        'pprint',
        'profile',
        'pstats',
        'pty',
        'pyclbr',
        'py_compile',
        'pydoc',
        'pydoc_data',
        'queue',
        'quopri',
        'random',
        're',
        'reprlib',
        'rlcompleter',
        'runpy',
        'sched',
        'secrets',
        'selectors',
        'shelve',
        'shlex',
        'shutil',
        'signal',
        'site',
        'site-packages',
        'smtplib',
        'socket',
        'socketserver',
        'sqlite3',
        'sre_compile',
        'sre_constants',
        'sre_parse',
        'ssl',
        'stat',
        'statistics',
        'string',
        'stringprep',
        'struct',
        'subprocess',
        'symtable',
        'sys',
        'sysconfig',
        'tabnanny',
        'tarfile',
        'tempfile',
        'test',
        'textwrap',
        'this',
        'threading',
        'time',
        'timeit',
        'tkinter',
        'token',
        'tokenize',
        'tomllib',
        'trace',
        'traceback',
        'tracemalloc',
        'tty',
        'turtle',
        'turtledemo',
        'types',
        'typing',
        'unittest',
        'urllib',
        'uuid',
        'venv',
        'warnings',
        'wave',
        'weakref',
        'webbrowser',
        'wsgiref',
        'xml',
        'xmlrpc',
        'zipapp',
        'zipfile',
        'zipimport',
        'zoneinfo',
}

def iter_paths():
    for arg in sys.argv[1:] or ['.']:
        path = Path(arg)

        if path.is_dir():
            yield from path.glob('**/*.py')
        else:
            yield path

for path in iter_paths():
    text = path.read_text()

    for line in text.splitlines():
        for pat in import_patterns:
            if m := re.match(pat, line):
                lib = m.group(1)
                if lib not in stdlib:
                    imports.add(lib)

for lib in sorted(imports):
    print(lib)





