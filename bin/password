#!/usr/bin/env python

import sys, time
import hashlib, hmac, getpass
import utilities.cursor as cursor

import argparse

parser = argparse.ArgumentParser(
        description="Generate strong and unique passwords.")

parser.add_argument('domain', help="Where this password will be used.")
parser.add_argument('--no-hide', action='store_false', dest='hide')
parser.add_argument('--no-password', action='store_false', dest='password')
parser.add_argument('--algorithm', choices=['sha', 'hmac', 'md5'],
        default='sha')

arguments = parser.parse_args()
domain = arguments.domain

if arguments.password:
    try:
        key = getpass.getpass()
    except KeyboardInterrupt:
        print
else:
    key = ''

if arguments.algorithm == 'sha':
    digest = hashlib.sha512(domain + key).hexdigest()
elif arguments.algorithm == 'hmac':
    digest = hmac.new(key, domain).hexdigest()
elif arguments.algorithm == 'md5':
    digest = hashlib.md5(domain + key).hexdigest()
else:
    raise AssertionError

password = 'K!' + digest[:8]

if arguments.hide:
    try:
        cursor.write(password); time.sleep(10)
        cursor.clear()
    except KeyboardInterrupt:
        pass
else:
    print password

