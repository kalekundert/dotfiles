#!/usr/bin/env python3

import re, shutil

def read_line():
    try:
        return input()
    except EOFError:
        raise StopIteration

def wrap_line(line):
    row = ''
    rows = []
    cursor = 0
    line = line.replace('\t', '    ').rstrip()
    width = shutil.get_terminal_size().columns

    for i, token in enumerate(re.split('(\x1b.*?[a-zA-Z])', line)):

        # The even tokens are the delimiters, which are ANSI escape codes.  
        # These should be added to the line without consuming any space.
        if i % 2 == 1:
            row += token
            cursor += 0

        # The odd tokens are the regular text between any escape codes.  These 
        # should be added to the line and broken as necessary.
        else:
            while cursor + len(token) > 80:
                cutoff = 80 - cursor
                row += token[:cutoff]
                token = token[cutoff:]
                rows.append(row)
                row, cursor = '', 0

            row += token
            cursor += len(token)

    rows.append(row)
    return rows

def main():
    rows_printed = 0
    rows_available = shutil.get_terminal_size().lines - 2

    try:
        while True:
            line = read_line()
            rows = wrap_line(line)

            for row in rows:
                print(row)
                rows_printed += 1
                #print(f"{rows_printed}/{rows_available}") 
                if rows_printed >= rows_available:
                    raise StopIteration

    except StopIteration:
        pass

    except KeyboardInterrupt:
        print()


if __name__ == '__main__':
    main()

