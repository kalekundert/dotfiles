#!/usr/bin/env python3

# Import some useful names.
import sys, os, re, math
from itertools import *
from math import *

try: from pathlib import Path
except ImportError: pass

try: from more_itertools import *
except ImportError: pass

try: import sh
except ImportError: pass

try: import timerit
except ImportError: pass

# Enable tab completion
try:
    import readline
except ImportError:
    print("Module readline not available.")
else:
    import rlcompleter
    if 'libedit' in readline.__doc__:
        readline.parse_and_bind("bind ^I rl_complete")
    else:
        readline.parse_and_bind("tab: complete")

# Define some variables to use in interactive sessions.
l = [1, 2, 3]
d = {'a': 1, 'b': 2}
s = {1, 2, 3}

def v(*args):
    return np.array(args)

try:
    from lazyasd import lazyobject
    from importlib import import_module

    @lazyobject
    def np():
        return import_module('numpy')

    @lazyobject
    def pd():
        return import_module('pandas')

    @lazyobject
    def pl():
        return import_module('polars')

    @lazyobject
    def mpl():
        return import_module('matplotlib')

    @lazyobject
    def plt():
        return import_module('matplotlib.pyplot')

    @lazyobject
    def nx():
        return import_module('networkx')

    @lazyobject
    def df():
        return pl.DataFrame([
            dict(a=1, b=1, x=np.random.random()),
            dict(a=2, b=1, x=np.random.random()),
            dict(a=3, b=1, x=np.random.random()),
            dict(a=1, b=2, x=np.random.random()),
            dict(a=2, b=2, x=np.random.random()),
            dict(a=3, b=2, x=np.random.random()),
        ])

    @lazyobject
    def a():
        return np.arange(12).reshape(3,4)

    @lazyobject
    def rng():
        from numpy.random import default_rng
        return default_rng()


except ImportError:
    print("install `lazyasd` for deferred imports")

